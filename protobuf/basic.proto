syntax = "proto3";

// Proto 通用数据包
// 用于封装其它proto编码数据，但同时提供类型标识。
message Proto {
    int32 name = 1; // 指令名
    bytes data = 2; // 关联数据（待解码）
}

// 节点声明类别
// seek: 寻求的服务，仅在客户端向服务器请求时有用。
// - find:net 参与组网，仅适用 findings 类型
// - stun:nat 请求NAT探测和打洞协助，任意类型适用
// - assist:x 寻求上线协助（获取Finder节点）
// - kind:app 获取服务器支持的应用名清单
// - peer:tcp 登记支持TCP的可直连服务器（后续提供信息）
message Kind {
    string base = 1;    // 基础名称（depots|blockchain|app|findings）
    string name = 2;    // 具体的服务名称（任意……）
    string seek = 3;    // 寻求的服务（find:net|stun:nat|assist:x|kind:app|peer:tcp）
}

// 服务类型名集
// 服务器返回给应用端的信息。
message ServKinds {
    repeated Kind names = 1;
}

// 收益信息
// 用于公共服务节点获取应用端的捐赠。
// 其中ID用于群组个体分辨，实际上也可以直接是区块链地址。
message Stake {
    string id = 1;      // 身份标识
    string addr = 2;    // 收益地址（区块链）
}

option go_package = "../base";
